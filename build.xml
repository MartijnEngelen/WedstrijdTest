<?xml version="1.0" encoding="UTF-8"?>
<project name="EGRS" default="build">

    <target name="build" depends="prepare,phploc-ci,pdepend,phpmd-ci,phpcs-ci,phpcpd-ci,copy-to-test"/>

	
    <target name="clean" unless="clean.done" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/build/phpdox"/>
        <property name="clean.done" value="true"/>
    </target>

    <target name="prepare" unless="prepare.done" depends="clean,generate-code" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
		
        <property name="prepare.done" value="true"/>
    </target>

     <target name="generate-code" description="Generate Currency-specific subclasses of Money and autoloader code">
		<chmod file="${basedir}/build/tools/*" perm="u+rwx"/>
		
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="${basedir}/build/tools/phploc.phar" taskname="phploc">
            <arg value="--count-tests"/>
            <arg path="${basedir}/php"/>
            <arg path="${basedir}/tests"/>
        </exec>
    </target>

    <target name="phploc-ci" depends="prepare"
            description="Measure project size using PHPLOC and log result in CSV and XML format">
        <exec executable="${basedir}/build/tools/phploc.phar" taskname="phploc">
            <arg value="--count-tests"/>
            <arg value="--log-csv"/>
            <arg path="${basedir}/build/logs/phploc.csv"/>
            <arg value="--log-xml"/>
            <arg path="${basedir}/build/logs/phploc.xml"/>
            <arg path="${basedir}/php"/>
            <arg path="${basedir}/tests"/>
        </exec>
    </target>

    <target name="pdepend" depends="prepare" description="Calculate software metrics using PHP_Depend">
        <exec executable="${basedir}/build/tools/pdepend.phar" taskname="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
            <arg path="${basedir}/php"/>
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print result in text format">
        <exec executable="${basedir}/build/tools/phpmd.phar" taskname="phpmd">
            <arg path="${basedir}/php"/>
            <arg value="text"/>
            <arg path="${basedir}/build/phpmd.xml"/>
        </exec>
    </target>

    <target name="phpmd-ci" depends="prepare"
            description="Perform project mess detection using PHPMD and log result in XML format">
        <exec executable="${basedir}/build/tools/phpmd.phar" taskname="phpmd">
            <arg path="${basedir}/php"/>
            <arg value="xml"/>
            <arg path="${basedir}/build/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg path="${basedir}/build/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print result in text format">
        <exec executable="${basedir}/build/tools/phpcs.phar" taskname="phpcs">
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg value="--ignore=autoload.php"/>
            <arg path="${basedir}/php"/>
            <arg path="${basedir}/tests"/>
        </exec>
    </target>

    <target name="phpcs-ci" depends="prepare"
            description="Find coding standard violations using PHP_CodeSniffer and log result in XML format">
        <exec executable="${basedir}/build/tools/phpcs.phar" output="/dev/null" taskname="phpcs">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg value="--ignore=autoload.php"/>
            <arg path="${basedir}/php"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="${basedir}/build/tools/phpcpd.phar" taskname="phpcpd">
            <arg path="${basedir}/php"/>
        </exec>
    </target>

    <target name="phpcpd-ci" depends="prepare"
            description="Find duplicate code using PHPCPD and log result in XML format">
        <exec executable="${basedir}/build/tools/phpcpd.phar" taskname="phpcpd">
            <arg value="--log-pmd"/>
            <arg path="${basedir}/build/logs/pmd-cpd.xml"/>
            <arg path="${basedir}/php"/>
        </exec>
    </target>

 <target name="copy-to-test" depends="prepare" description="Copy to test environment">
       
	   <sshexec host="devops13-beta.cloudapp.net" username="jenkins" keyfile="/var/lib/jenkins/.ssh/id_rsa" passphrase="" command="docker stop $(docker ps -a -q)" trust="true"/>
	   <scp todir="jenkins@devops13-beta.cloudapp.net:/usr/local/share/develop/" keyfile="/var/lib/jenkins/.ssh/id_rsa" passphrase="" trust="true">
		<fileset dir="${basedir}/"/>
	   </scp>
	 
	 

    </target>

</project>
